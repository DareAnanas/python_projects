# Оголошення власного віджета ThemedButton, який наслідується від Button
<ThemedButton@Button>:
    font_size: app.font_size  # Розмір шрифту береться з налаштувань додатку
    color: app.theme['text_color']  # Колір тексту залежить від поточної теми
    background_color: app.theme['button_bg']  # Колір фону кнопки залежить від теми
    background_normal: ''  # Забираємо стандартний бекграунд картинки кнопки

# Оголошення власного віджета ThemedLabel, який наслідується від Label
<ThemedLabel>:
    font_size: app.font_size / 2  # Менший розмір шрифту для підписів
    color: app.theme['text_color']  # Колір тексту залежить від теми
    canvas.before:  # Промальовка фону перед текстом
        Color:
            rgba: self.bg_color  # Колір фону залежить від властивості bg_color
        Rectangle:
            pos: self.pos
            size: self.size    

# Розмітка головного меню
<DoodleWordMenu>:
    BoxLayout:
        orientation: 'vertical'  # Розташування елементів вертикально
        padding: [200, 100]  # Відступи від країв контейнера
        spacing: 30  # Відстань між елементами
        canvas.before:  # Промальовка фону перед усіма елементами
            Color:
                rgba: app.theme['bg_color']  # Колір фону з теми
            Rectangle:
                pos: self.pos
                size: self.size
        Base64Image:
            image_name: app.theme['logo_image']  # Зміна логотипу залежно від теми
            fit_mode: 'contain'  # Логотип масштабується, щоб повністю поміститись у віджет
        Label:
            text: "Doodle Word"  # Назва гри
            font_size: app.font_size  # Розмір шрифту для заголовка
            color: app.theme['text_color']  # Колір тексту з теми
        ThemedButton:
            text: "Почати гру"  # Кнопка для старту гри
            on_press: root.manager.current = 'game'  # При натисканні переходимо на екран 'game'
        ThemedButton:
            text: 'Налаштування'  # Кнопка для переходу до налаштувань
            on_press: root.go_to_settings()
        ThemedButton:
            text: 'Вийти з гри'  # Кнопка для виходу з додатку
            on_press: app.stop()

# Модальне вікно для введення слова користувачем
<UserWordModal>:
    size_hint: 0.5, 0.5  # Вікно займатиме 50% ширини та висоти екрану
    auto_dismiss: False  # Модальне вікно не закривається при кліку поза межами
    background: ''  # Власний фон без стандартної текстури
    background_color: app.theme['bg_color']  # Колір фону модального вікна з теми
    word_input: word_input  # Прив'язка об'єкта TextInput до властивості класу
    info_label: info_label  # Прив'язка об'єкта Label до властивості класу
    BoxLayout:
        orientation: 'vertical'  # Розташування елементів вертикально
        padding: [20, 10]  # Відступи всередині модального вікна
        spacing: 20  # Проміжок між елементами
        Label:
            id: info_label  # Мітка, що показує повідомлення
            text: root.title  # Текст береться з властивості title у класі
            font_size: app.font_size / 2  # Зменшений шрифт для тексту
            color: app.theme['text_color']  # Колір тексту за темою
        TextInput:
            id: word_input  # Поле введення для слова
            font_size: app.font_size / 2  # Зменшений розмір шрифту
            background_color: app.theme['input_bg']  # Колір фону поля введення
            foreground_color: app.theme['text_color']  # Колір тексту у полі
            cursor_color: app.theme['text_color']  # Колір курсора
            background_normal: ''  # Відключення стандартного фону
            multiline: False  # Дозволяємо тільки однорядковий ввід
            canvas.before:  # Малюємо рамку навколо поля
                Color:
                    rgba: app.theme['stroke_color']  # Колір рамки
                Line:
                    width: 2
                    rectangle: self.x, self.y, self.width, self.height
        BoxLayout:
            orientation: 'horizontal'  # Кнопки розташовуються горизонтально
            spacing: 5  # Проміжок між кнопками
            ThemedButton:
                text: 'Скасувати'  # Кнопка для закриття модального вікна
                font_size: app.font_size / 2
                on_press: root.dismiss()  # При натисканні закриваємо модальне вікно
            ThemedButton:
                text: 'Загадати'  # Кнопка для підтвердження введення
                font_size: app.font_size / 2
                on_press: root.write_user_word()  # При натисканні викликаємо метод запису слова

# Розмітка екрану налаштувань гри
<DoodleWordSettings>:
    BoxLayout:
        orientation: 'vertical'  # Розташування елементів вертикально
        padding: [200, 50]  # Відступи від країв контейнера
        spacing: 30  # Відстань між елементами
        canvas.before:  # Промальовка фону перед усіма елементами
            Color:
                rgba: app.theme['bg_color']  # Колір фону з теми
            Rectangle:
                pos: self.pos
                size: self.size
        ThemedButton:
            text: 'Перезапустити гру'  # Кнопка для перезапуску гри
            on_press: root.restart_game_button_action()  # Виклик методу перезапуску
        FloatLayout:
            ThemedButton:
                pos: self.parent.pos  # Позиція кнопки - як у батьківського контейнера
                text: 'Загадати слово'  # Кнопка для відкриття модального вікна введення слова
                on_press: root.open_user_word_modal()
            Label:
                right: self.parent.right  # Вирівнювання мітки праворуч
                top: self.parent.top  # Вирівнювання мітки догори
                size_hint: [None, None]  # Розмір мітки фіксований
                size: [20, 20]
                canvas.before:
                    Color:
                        # Якщо користувач задав слово, мітка підсвічується кольором
                        rgba: app.theme['changed_color'] if app.user_word_setted else [0,0,0,0]  
                    Ellipse:
                        pos: self.pos
                        size: self.size  # Малюється кружечок у кутку
        WordLengthSpinBox:
            id: word_length_spin_box  # Спінбокс для вибору довжини слова
            Button:
                size_hint_x: 0.2  # Кнопка займає 20% ширини
                background_color: app.theme['button_bg']
                background_normal: ''
                on_press: self.parent.prev_element()  # Перехід до попереднього варіанту
                Base64Image:
                    image_name: app.theme['left_arrow_image']  # Іконка стрілки вліво
                    size: 25, 25
                    center_x: self.parent.center_x
                    center_y: self.parent.center_y
            Label:
                size_hint_x: 0.6  # Мітка займає 60% ширини
                font_size: app.font_size
                color: app.theme['text_color']
                text: self.parent.items[self.parent.index][1]  # Відображення обраного елемента
            Button:
                size_hint_x: 0.2  # Кнопка займає 20% ширини
                background_color: app.theme['button_bg']
                background_normal: ''
                on_press: self.parent.next_element()  # Перехід до наступного варіанту
                Base64Image:
                    image_name: app.theme['right_arrow_image']  # Іконка стрілки вправо
                    size: 25, 25
                    center_x: self.parent.center_x
                    center_y: self.parent.center_y      
        AttemptsSpinBox:
            id: attempts_spin_box  # Спінбокс для вибору кількості спроб
            Button:
                size_hint_x: 0.2
                background_color: app.theme['button_bg']
                background_normal: ''
                on_press: self.parent.prev_element()
                Base64Image:
                    image_name: app.theme['left_arrow_image']
                    size: 25, 25
                    center_x: self.parent.center_x
                    center_y: self.parent.center_y
            Label:
                size_hint_x: 0.6
                font_size: app.font_size
                color: app.theme['text_color']
                text: self.parent.items[self.parent.index][1]
            Button:
                size_hint_x: 0.2
                background_color: app.theme['button_bg']
                background_normal: ''
                on_press: self.parent.next_element()
                Base64Image:
                    image_name: app.theme['right_arrow_image']
                    size: 25, 25
                    center_x: self.parent.center_x
                    center_y: self.parent.center_y
        ThemedButton:
            text: 'Змінити тему'  # Кнопка для перемикання теми (світла/темна)
            on_press: root.switch_theme()
        ThemedButton:
            text: 'Назад'  # Кнопка повернення в головне меню
            on_press: root.back_to_menu()


# Модальне вікно завершення гри
<GameEndModal>:
    size_hint: 0.5, 0.5  # Розмір модального вікна 50% ширини і висоти
    auto_dismiss: False  # Вікно не закривається при натисканні поза межами
    background: ''  # Прибираємо стандартне зображення фону
    background_color: app.theme['bg_color']  # Власний колір фону
    restart_button: restart_button
    BoxLayout:
        orientation: 'vertical'  # Вертикальне розташування елементів
        padding: [20, 10]  # Відступи всередині вікна
        spacing: 5  # Відстань між елементами
        Label:
            text: root.title  # Заголовок вікна (виграв/програв)
            font_size: app.font_size
            color: root.color  # Колір залежить від результату
        Label:
            text: 'Правильне слово: ' + app.root.get_screen('game').random_word  
            # Відображення правильного слова після закінчення гри
            color: app.theme['text_color']
            font_size: app.font_size / 2
        ThemedButton:
            id: restart_button
            text: 'Грати знову'  # Кнопка для початку нової гри
            font_size: app.font_size / 2

# Основний екран гри
<DoodleWordGame>:
    word_grid: word_grid  # ID для сітки слів
    word_input: word_input  # ID поля вводу слова
    confirm_word_button: confirm_word_button  # ID кнопки підтвердження
    back_to_menu_button: back_to_menu_button  # ID кнопки повернення до меню
    hint_label: hint_label  # ID для тексту підказки
    BoxLayout:
        orientation: 'vertical'  #Вертикальне розміщення
        padding: [200, 50]
        spacing: 20
        canvas.before:
            Color:
                rgba: app.theme['bg_color']  # Фон екрану гри
            Rectangle:
                pos: self.pos
                size: self.size
        BoxLayout:
            orientation: 'vertical'
            size_hint_y: 0.7  # Сітка гри займає 70% починаючи зверху
            GridLayout:
                id: word_grid
                cols: app.edition['length']  # Кількість стовпців залежить від довжини слова
                rows: 6  # Шість рядків за замовчуванням (кількість спроб)
                spacing: 5
                padding: [0, app.dynamic_padding]  # Динамічні відступи згори
        TextInput:
            id: word_input
            font_size: app.font_size / 2
            size_hint_y: 0.1  # Поле вводу займає 10% висоти
            background_color: app.theme['input_bg']
            foreground_color: app.theme['text_color']
            cursor_color: app.theme['text_color']
            background_normal: ''
            multiline: False  # Заборонено багато рядків
            canvas.before:
                Color:
                    rgba: app.theme['stroke_color']  # Рамка навколо поля вводу
                Line:
                    width: 2
                    rectangle: self.x, self.y, self.width, self.height
        ThemedButton:
            id: confirm_word_button
            text: 'Вгадати слово'  # Кнопка для підтвердження введеного слова
            size_hint_y: 0.1
            font_size: app.font_size / 2
        ThemedButton:
            id: back_to_menu_button
            text: 'Повернутися в меню'  # Кнопка повернення у головне меню
            size_hint_y: 0.1
            font_size: app.font_size / 2
    FloatLayout:
        Label:
            id: hint_label
            x: (root.width - self.width) / 2  # Центрування підказки по горизонталі
            y: (root.height - self.height) / 2  # Центрування підказки по вертикалі
            size_hint: (None, None)
            font_size: app.font_size / 2
            size: self.texture_size  # Розмір залежить від тексту
            padding: 10
            color: (1,1,1,1)  # Білий текст
            text: ''  # Початково текст пустий
            opacity: 0  # Початково невидимий
            canvas.before:
                Color:
                    rgba: (0,0,0,1)  # Чорний фон для підказки
                Rectangle:
                    pos: self.pos
                    size: self.size
